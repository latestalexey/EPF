Перем пСупервайзер;
Перем пКодДистрибьютора;
Перем пКодРегиона;

Перем КаналыРынкаБик экспорт;
Перем ServiceManager, Args, Document, Sheets, Desktop;	
Перем СоответствияПолей;
Перем СписокСимволов;

Функция СформироватьТаблицуСПродажами()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА СтавкиНДС.Ссылка = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	               |				ИЛИ СтавкиНДС.Ссылка = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	               |			ТОГДА 10
	               |		КОГДА СтавкиНДС.Ссылка = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	               |				ИЛИ СтавкиНДС.Ссылка = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	               |			ТОГДА 18
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ПредставлениеСтавкиНДС,
	               |	СтавкиНДС.Ссылка КАК СтавкаНДС
	               |ПОМЕСТИТЬ ВТ_СтавкиНДС
	               |ИЗ
	               |	Перечисление.СтавкиНДС КАК СтавкиНДС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Объект,
	               |	КОЛИЧЕСТВО(ТочкиКлиента.Ссылка) КАК КоличествоТочек
	               |ПОМЕСТИТЬ втКоличествоТочекКлиента
	               |ИЗ
	               |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницыКонтрагентов КАК ТочкиКлиента
	               |		ПО ЗначенияСвойствОбъектов.Объект.Владелец = ТочкиКлиента.Владелец
	               |			И (НЕ ТочкиКлиента.ПометкаУдаления)
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Свойство.Код = ""000226""
	               |	И ЗначенияСвойствОбъектов.Значение = ИСТИНА
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗначенияСвойствОбъектов.Объект
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗапасыНаСкладах.Период КАК Период,
	               |	ЗапасыНаСкладах.Регистратор КАК Регистратор,
	               |	ЗапасыНаСкладах.Номенклатура КАК Номенклатура,
	               |	СУММА(ЗапасыНаСкладах.КоличествоОборот) КАК Количество
	               |ПОМЕСТИТЬ ВТ_ДвиженияЗапасов
	               |ИЗ
	               |	РегистрНакопления.ЗапасыНаСкладах.Обороты(
	               |			ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -1),
	               |			ДОБАВИТЬКДАТЕ(&КонецПериода, ДЕНЬ, 1),
	               |			Запись,
	               |			Номенклатура.ДистрибьюторскийКонтракт В (&СписокКонтрактов)
	               |				И НЕ Склад.Родитель.Код = ""Ц00053"") КАК ЗапасыНаСкладах
	               |ГДЕ
	               |	НЕ ЗапасыНаСкладах.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистров
	               |	И НЕ ЗапасыНаСкладах.Регистратор ССЫЛКА Документ.КорректировкаЗаписейРегистровНакопления
	               |	И НЕ ЗапасыНаСкладах.Регистратор ССЫЛКА Документ.КорректировкаКачестваЗапасов
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЗапасыНаСкладах.Период,
	               |	ЗапасыНаСкладах.Регистратор,
	               |	ЗапасыНаСкладах.Номенклатура
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Регистратор,
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ.Регистратор КАК Регистратор,
	               |	ВЫБОР
	               |		КОГДА ВТ.Регистратор ССЫЛКА Документ.ОтгрузкаТоваровУслуг
	               |				ИЛИ ВТ.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	               |				ИЛИ ВТ.Регистратор ССЫЛКА Документ.ОприходованиеТоваров
	               |				ИЛИ ВТ.Регистратор ССЫЛКА Документ.СписаниеТоваров
	               |				ИЛИ ВТ.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	               |			ТОГДА ВТ.Регистратор
	               |		КОГДА ВТ.Регистратор ССЫЛКА Документ.ИнвентаризацияДоставки
	               |			ТОГДА ВТ.Регистратор.ДокументОтгрузки
	               |		КОГДА ВТ.Регистратор ССЫЛКА Документ.РасходныйСкладскойОрдер
	               |			ТОГДА ВТ.Регистратор.ДокументОснование
	               |		КОГДА ВТ.Регистратор ССЫЛКА Документ.ПриходныйСкладскойОрдер
	               |				И ЕСТЬNULL(ВТ.Регистратор.ДокументОснование.Номер, ""0"") <> ""0""
	               |			ТОГДА ВТ.Регистратор.ДокументОснование
	               |		КОГДА ВТ.Регистратор ССЫЛКА Документ.ПриходныйСкладскойОрдер
	               |				И ПТУПоПСО.ПТУ ЕСТЬ НЕ NULL 
	               |			ТОГДА ПТУПоПСО.ПТУ
	               |		КОГДА ВТ.Регистратор ССЫЛКА Документ.ПриходныйСкладскойОрдер
	               |				И ВозвратыПоПСО.Возврат ЕСТЬ НЕ NULL 
	               |			ТОГДА ВозвратыПоПСО.Возврат
	               |		ИНАЧЕ ВТ.Регистратор
	               |	КОНЕЦ КАК ЗаказПокупателя,
	               |	МИНИМУМ(ВТ.Период) КАК Период
	               |ПОМЕСТИТЬ ВТ_СоответствияРегистраторовЗаказам
	               |ИЗ
	               |	ВТ_ДвиженияЗапасов КАК ВТ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			Товары.ПриходныйОрдер КАК ПриходныйОрдер,
	               |			МАКСИМУМ(Товары.Ссылка) КАК ПТУ
	               |		ИЗ
	               |			Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			Товары.ПриходныйОрдер) КАК ПТУПоПСО
	               |		ПО (ВТ.Регистратор ССЫЛКА Документ.ПриходныйСкладскойОрдер)
	               |			И ВТ.Регистратор = ПТУПоПСО.ПриходныйОрдер
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			Товары.ПриходныйОрдер КАК ПриходныйОрдер,
	               |			МАКСИМУМ(Товары.Ссылка) КАК Возврат
	               |		ИЗ
	               |			Документ.ВозвратТоваровОтПокупателя.Товары КАК Товары
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			Товары.ПриходныйОрдер) КАК ВозвратыПоПСО
	               |		ПО (ВТ.Регистратор ССЫЛКА Документ.ПриходныйСкладскойОрдер)
	               |			И ВТ.Регистратор = ВозвратыПоПСО.ПриходныйОрдер
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ.Регистратор,
	               |	ВЫБОР
	               |		КОГДА ВТ.Регистратор ССЫЛКА Документ.ОтгрузкаТоваровУслуг
	               |				ИЛИ ВТ.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	               |				ИЛИ ВТ.Регистратор ССЫЛКА Документ.ОприходованиеТоваров
	               |				ИЛИ ВТ.Регистратор ССЫЛКА Документ.СписаниеТоваров
	               |				ИЛИ ВТ.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	               |			ТОГДА ВТ.Регистратор
	               |		КОГДА ВТ.Регистратор ССЫЛКА Документ.ИнвентаризацияДоставки
	               |			ТОГДА ВТ.Регистратор.ДокументОтгрузки
	               |		КОГДА ВТ.Регистратор ССЫЛКА Документ.РасходныйСкладскойОрдер
	               |			ТОГДА ВТ.Регистратор.ДокументОснование
	               |		КОГДА ВТ.Регистратор ССЫЛКА Документ.ПриходныйСкладскойОрдер
	               |				И ЕСТЬNULL(ВТ.Регистратор.ДокументОснование.Номер, ""0"") <> ""0""
	               |			ТОГДА ВТ.Регистратор.ДокументОснование
	               |		КОГДА ВТ.Регистратор ССЫЛКА Документ.ПриходныйСкладскойОрдер
	               |				И ПТУПоПСО.ПТУ ЕСТЬ НЕ NULL 
	               |			ТОГДА ПТУПоПСО.ПТУ
	               |		КОГДА ВТ.Регистратор ССЫЛКА Документ.ПриходныйСкладскойОрдер
	               |				И ВозвратыПоПСО.Возврат ЕСТЬ НЕ NULL 
	               |			ТОГДА ВозвратыПоПСО.Возврат
	               |		ИНАЧЕ ВТ.Регистратор
	               |	КОНЕЦ
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Регистратор,
	               |	ЗаказПокупателя
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Документы.ЗаказПокупателя КАК ДокументСсылка,
	               |	Документы.ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	Документы.ЗаказПокупателя.СтруктурнаяЕдиницаКонтрагента КАК СтруктурнаяЕдиницаКонтрагента,
	               |	Документы.ЗаказПокупателя.Ответственный.ФизЛицо КАК ТорговыйПредставитель,
	               |	Движ.Номенклатура КАК Номенклатура,
	               |	-Движ.Количество КАК Количество,
	               |	ВЫРАЗИТЬ(ВЫБОР
	               |			КОГДА ЕСТЬNULL(ТЧ.Цена, 0) > 0
	               |				ТОГДА ЕСТЬNULL(ТЧ.Цена, 0) * 100 / (втСтавкиНДС.ПредставлениеСтавкиНДС + 100)
	               |			ИНАЧЕ ЕСТЬNULL(ТЧ.Цена, 0)
	               |		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
	               |	ЕСТЬNULL(ТЧ.СтавкаНДС, &СтавкаБезНДС) КАК СтавкаНДС,
	               |	Движ.Период КАК Период,
	               |	ВЫБОР
	               |		КОГДА Документы.ЗаказПокупателя ССЫЛКА Документ.ОтгрузкаТоваровУслуг
	               |				ИЛИ Документы.ЗаказПокупателя ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК Реализация,
	               |	Движ.Регистратор
	               |ПОМЕСТИТЬ ВТ_ВсеОтгрузки
	               |ИЗ
	               |	ВТ_ДвиженияЗапасов КАК Движ
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СоответствияРегистраторовЗаказам КАК Документы
	               |		ПО (Документы.Регистратор = Движ.Регистратор)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ТабЧасть.Ссылка КАК Ссылка,
	               |			ТабЧасть.Номенклатура КАК Номенклатура,
	               |			СУММА(ТабЧасть.Количество * ТабЧасть.Коэффициент) КАК Количество,
	               |			ВЫРАЗИТЬ(ВЫБОР
	               |					КОГДА ТабЧасть.Ссылка.СуммаВключаетНДС
	               |						ТОГДА СУММА(ТабЧасть.Сумма)
	               |					ИНАЧЕ СУММА(ТабЧасть.Сумма + ТабЧасть.СуммаНДС)
	               |				КОНЕЦ / СУММА(ТабЧасть.Количество * ТабЧасть.Коэффициент) КАК ЧИСЛО(15, 2)) КАК Цена,
	               |			МАКСИМУМ(ТабЧасть.СтавкаНДС) КАК СтавкаНДС
	               |		ИЗ
	               |			Документ.ОтгрузкаТоваровУслуг.Товары КАК ТабЧасть
	               |		ГДЕ
	               |			ТабЧасть.Ссылка.ДатаОтгрузки МЕЖДУ &НачалоПериода И &КонецПериода
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ТабЧасть.Ссылка,
	               |			ТабЧасть.Номенклатура,
	               |			ТабЧасть.Ссылка.СуммаВключаетНДС
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			ТабЧасть.Ссылка,
	               |			ТабЧасть.Номенклатура,
	               |			СУММА(ТабЧасть.Количество * ТабЧасть.Коэффициент),
	               |			ВЫРАЗИТЬ(ВЫБОР
	               |					КОГДА ТабЧасть.Ссылка.СуммаВключаетНДС
	               |						ТОГДА СУММА(ТабЧасть.Сумма)
	               |					ИНАЧЕ СУММА(ТабЧасть.Сумма + ТабЧасть.СуммаНДС)
	               |				КОНЕЦ / СУММА(ТабЧасть.Количество * ТабЧасть.Коэффициент) КАК ЧИСЛО(15, 2)),
	               |			МАКСИМУМ(ТабЧасть.СтавкаНДС)
	               |		ИЗ
	               |			Документ.ВозвратТоваровОтПокупателя.Товары КАК ТабЧасть
	               |		ГДЕ
	               |			ТабЧасть.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ТабЧасть.Ссылка,
	               |			ТабЧасть.Номенклатура,
	               |			ТабЧасть.Ссылка.СуммаВключаетНДС
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			ТабЧасть.Ссылка,
	               |			ТабЧасть.Номенклатура,
	               |			СУММА(ТабЧасть.Количество * ТабЧасть.Коэффициент),
	               |			МАКСИМУМ(ТабЧасть.Цена),
	               |			МАКСИМУМ(ТабЧасть.СтавкаНДС)
	               |		ИЗ
	               |			Документ.ПоступлениеТоваровУслуг.Товары КАК ТабЧасть
	               |		ГДЕ
	               |			ТабЧасть.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ТабЧасть.Ссылка,
	               |			ТабЧасть.Номенклатура
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			ТабЧасть.Ссылка,
	               |			ТабЧасть.Номенклатура,
	               |			СУММА(ТабЧасть.Количество * ТабЧасть.Коэффициент),
	               |			МАКСИМУМ(ТабЧасть.Цена),
	               |			МАКСИМУМ(ТабЧасть.СтавкаНДС)
	               |		ИЗ
	               |			Документ.ВозвратТоваровПоставщику.Товары КАК ТабЧасть
	               |		ГДЕ
	               |			ТабЧасть.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ТабЧасть.Ссылка,
	               |			ТабЧасть.Номенклатура) КАК ТЧ
	               |		ПО (ТЧ.Ссылка = Документы.ЗаказПокупателя)
	               |			И (ТЧ.Номенклатура = Движ.Номенклатура)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНДС КАК втСтавкиНДС
	               |		ПО (ТЧ.Номенклатура.СтавкаНДС = втСтавкиНДС.СтавкаНДС)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Реализация,
	               |	ДокументСсылка,
	               |	Контрагент,
	               |	СтруктурнаяЕдиницаКонтрагента,
	               |	ТорговыйПредставитель,
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТ.ДокументСсылка КАК ДокументПродажи
	               |ПОМЕСТИТЬ ВТ_ВсеДокументыПоПокупателям
	               |ИЗ
	               |	ВТ_ВсеОтгрузки КАК ВТ
	               |ГДЕ
	               |	ВТ.Реализация
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ДокументПродажи
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(ВТ.Контрагент КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ВТ.СтруктурнаяЕдиницаКонтрагента КАК Справочник.СтруктурныеЕдиницыКонтрагентов) КАК ТорговаяТочка,
	               |	МАКСИМУМ(ВТ.ТорговыйПредставитель) КАК ТорговыйПредставитель,
	               |	ВТ.Контрагент.Код + ВЫБОР
	               |		КОГДА ВТ.СтруктурнаяЕдиницаКонтрагента.Код ЕСТЬ NULL 
	               |			ТОГДА """"
	               |		ИНАЧЕ ""-"" + ВТ.СтруктурнаяЕдиницаКонтрагента.Код
	               |	КОНЕЦ КАК Client_Code,
	               |	ПОДСТРОКА(ВТ.Контрагент.Наименование, 1, 200) + ВЫБОР
	               |		КОГДА ВТ.СтруктурнаяЕдиницаКонтрагента.Код ЕСТЬ NULL 
	               |			ТОГДА """"
	               |		ИНАЧЕ "" - "" + ПОДСТРОКА(ВТ.СтруктурнаяЕдиницаКонтрагента.Наименование, 1, 200)
	               |	КОНЕЦ КАК Client_Name,
	               |	МАКСИМУМ(ЕСТЬNULL(Адреса.Регион, """")) КАК Client_obl,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ЕСТЬNULL(Адреса.Город, """") <> """"
	               |				ТОГДА Адреса.Город
	               |			КОГДА ЕСТЬNULL(Адреса.НаселенныйПункт, """") <> """"
	               |				ТОГДА Адреса.НаселенныйПункт
	               |			ИНАЧЕ """"
	               |		КОНЕЦ) КАК Client_city,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ЕСТЬNULL(Адреса.Улица, """") = """"
	               |				ТОГДА ВТ.СтруктурнаяЕдиницаКонтрагента.Наименование
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ЕСТЬNULL(Адреса.Город, """") = """"
	               |						ТОГДА ВЫБОР
	               |								КОГДА ЕСТЬNULL(Адреса.НаселенныйПункт, """") = """"
	               |									ТОГДА """"
	               |								ИНАЧЕ Адреса.НаселенныйПункт + "", ""
	               |							КОНЕЦ
	               |					ИНАЧЕ Адреса.Город + "", ""
	               |				КОНЕЦ + Адреса.Улица + ВЫБОР
	               |					КОГДА ЕСТЬNULL(Адреса.Дом, """") = """"
	               |						ТОГДА """"
	               |					ИНАЧЕ "", "" + Адреса.Дом
	               |				КОНЕЦ + ВЫБОР
	               |					КОГДА ЕСТЬNULL(Адреса.Корпус, """") = """"
	               |						ТОГДА """"
	               |					ИНАЧЕ ""/"" + Адреса.Корпус
	               |				КОНЕЦ
	               |		КОНЕЦ) КАК Client_Address,
	               |	МАКСИМУМ(ВТ.ТорговыйПредставитель.Код) КАК AgentId,
	               |	ВТ.Контрагент.ИНН КАК INN
	               |ПОМЕСТИТЬ ВТ_ТорговыеТочкиПокупателей
	               |ИЗ
	               |	ВТ_ВсеОтгрузки КАК ВТ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			Адреса.Объект КАК ОбъектСсылка,
	               |			Адреса.Вид КАК ВидАдреса,
	               |			МАКСИМУМ(Адреса.Поле1) КАК ПочтовыйИндекс,
	               |			МАКСИМУМ(Адреса.Поле2) КАК Регион,
	               |			МАКСИМУМ(Адреса.Поле3) КАК Район,
	               |			МАКСИМУМ(Адреса.Поле4) КАК Город,
	               |			МАКСИМУМ(Адреса.Поле5) КАК НаселенныйПункт,
	               |			МАКСИМУМ(Адреса.Поле6) КАК Улица,
	               |			МАКСИМУМ(Адреса.Поле7) КАК Дом,
	               |			МАКСИМУМ(Адреса.Поле8) КАК Корпус,
	               |			МАКСИМУМ(Адреса.Поле9) КАК Квартира,
	               |			МАКСИМУМ(ВЫРАЗИТЬ(Адреса.Представление КАК СТРОКА(255))) КАК Представление
	               |		ИЗ
	               |			РегистрСведений.КонтактнаяИнформация КАК Адреса
	               |		ГДЕ
	               |			Адреса.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			Адреса.Объект,
	               |			Адреса.Вид) КАК Адреса
	               |		ПО (Адреса.ОбъектСсылка = ВЫБОР
	               |				КОГДА ЕСТЬNULL(ВТ.СтруктурнаяЕдиницаКонтрагента, &ПустаяТТ) = &ПустаяТТ
	               |					ТОГДА ВТ.Контрагент
	               |				ИНАЧЕ ВТ.СтруктурнаяЕдиницаКонтрагента
	               |			КОНЕЦ)
	               |			И (Адреса.ВидАдреса = ВЫБОР
	               |				КОГДА ЕСТЬNULL(ВТ.СтруктурнаяЕдиницаКонтрагента, &ПустаяТТ) = &ПустаяТТ
	               |					ТОГДА &ВидАдресДоставкиКонтрагента
	               |				КОГДА ВТ.СтруктурнаяЕдиницаКонтрагента.Код В (""Ц00017068"", ""Ц00017069"", ""Ц00017070"")
	               |					ТОГДА &ВидАдресТранссибирская
	               |				ИНАЧЕ &ВидАдресСтруктурнойЕдиницы
	               |			КОНЕЦ)
	               |ГДЕ
	               |	ВТ.Реализация
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ.Контрагент,
	               |	ВТ.СтруктурнаяЕдиницаКонтрагента,
	               |	ВТ.Контрагент.ИНН,
	               |	ВТ.Контрагент.Код + ВЫБОР
	               |		КОГДА ВТ.СтруктурнаяЕдиницаКонтрагента.Код ЕСТЬ NULL 
	               |			ТОГДА """"
	               |		ИНАЧЕ ""-"" + ВТ.СтруктурнаяЕдиницаКонтрагента.Код
	               |	КОНЕЦ,
	               |	ПОДСТРОКА(ВТ.Контрагент.Наименование, 1, 200) + ВЫБОР
	               |		КОГДА ВТ.СтруктурнаяЕдиницаКонтрагента.Код ЕСТЬ NULL 
	               |			ТОГДА """"
	               |		ИНАЧЕ "" - "" + ПОДСТРОКА(ВТ.СтруктурнаяЕдиницаКонтрагента.Наименование, 1, 200)
	               |	КОНЕЦ
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	ТорговаяТочка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК DISTRIB_CODE,
	               |	ВЫРАЗИТЬ("""" КАК СТРОКА(3)) КАК AREA_CODE,
	               |	ВЫРАЗИТЬ("""" КАК СТРОКА(3)) КАК CONTRACT,
	               |	ВЫРАЗИТЬ("""" КАК СТРОКА(25)) КАК SUPERVISOR,
	               |	втПоставки.ТорговыйПредставитель.Наименование КАК SALES_REP,
	               |	втПоставки.Контрагент КАК CUSTOMER,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(КоличествоТочекКлиента.КоличествоТочек, 0) > 0
	               |			ТОГДА ПРЕДСТАВЛЕНИЕ(КоличествоТочекКлиента.КоличествоТочек)
	               |		ИНАЧЕ ""1""
	               |	КОНЕЦ КАК DELIVERY_TYPE,
	               |	втПоставки.СтруктурнаяЕдиницаКонтрагента.Код КАК OUTLET_CODE,
	               |	ЕСТЬNULL(ТорговыеТочкиПокупателей.Client_Address, втПоставки.СтруктурнаяЕдиницаКонтрагента.Наименование) КАК OUTLET_ADDRESS,
	               |	ЕСТЬNULL(втПоставки.СтруктурнаяЕдиницаКонтрагента.ТипКаналаРаспределения.Код, """") КАК CHANNEL_CODE,
	               |	ВЫБОР
	               |		КОГДА НЕ втПоставки.ДокументСсылка ССЫЛКА Документ.ОтгрузкаТоваровУслуг
	               |			ТОГДА втПоставки.Период
	               |		ИНАЧЕ втПоставки.ДокументСсылка.ДатаОтгрузки
	               |	КОНЕЦ КАК DATE,
	               |	ВЫБОР
	               |		КОГДА втПоставки.Регистратор ССЫЛКА Документ.ИнвентаризацияДоставки
	               |			ТОГДА втПоставки.Регистратор.Номер
	               |		ИНАЧЕ втПоставки.ДокументСсылка.Номер
	               |	КОНЕЦ КАК INVOICE,
	               |	МАКСИМУМ(Штрихкоды.Штрихкод) КАК BARCODE,
	               |	втПоставки.Номенклатура.Артикул КАК WID,
	               |	втПоставки.Номенклатура.Наименование КАК DESCRIPTION,
	               |	втПоставки.Количество КАК QUANTITY,
	               |	ВЫРАЗИТЬ(втПоставки.Количество * втПоставки.Цена КАК ЧИСЛО(15, 2)) КАК AMOUNT
	               |ИЗ
	               |	ВТ_ВсеОтгрузки КАК втПоставки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТорговыеТочкиПокупателей КАК ТорговыеТочкиПокупателей
	               |		ПО втПоставки.СтруктурнаяЕдиницаКонтрагента = ТорговыеТочкиПокупателей.ТорговаяТочка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихКоды КАК Штрихкоды
	               |		ПО втПоставки.Номенклатура = Штрихкоды.Номенклатура
	               |			И втПоставки.Номенклатура.ЕдиницаХраненияОстатков = Штрихкоды.ЕдиницаИзмерения
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втКоличествоТочекКлиента КАК КоличествоТочекКлиента
	               |		ПО втПоставки.СтруктурнаяЕдиницаКонтрагента = КоличествоТочекКлиента.Объект
	               |ГДЕ
	               |	втПоставки.Реализация
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втПоставки.Контрагент,
	               |	втПоставки.ТорговыйПредставитель,
	               |	втПоставки.СтруктурнаяЕдиницаКонтрагента.Код,
	               |	втПоставки.Номенклатура.Артикул,
	               |	втПоставки.Номенклатура.Наименование,
	               |	втПоставки.Количество,
	               |	втПоставки.ТорговыйПредставитель.Наименование,
	               |	ЕСТЬNULL(ТорговыеТочкиПокупателей.Client_Address, втПоставки.СтруктурнаяЕдиницаКонтрагента.Наименование),
	               |	ЕСТЬNULL(втПоставки.СтруктурнаяЕдиницаКонтрагента.ТипКаналаРаспределения.Код, """"),
	               |	ВЫБОР
	               |		КОГДА НЕ втПоставки.ДокументСсылка ССЫЛКА Документ.ОтгрузкаТоваровУслуг
	               |			ТОГДА втПоставки.Период
	               |		ИНАЧЕ втПоставки.ДокументСсылка.ДатаОтгрузки
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА втПоставки.Регистратор ССЫЛКА Документ.ИнвентаризацияДоставки
	               |			ТОГДА втПоставки.Регистратор.Номер
	               |		ИНАЧЕ втПоставки.ДокументСсылка.Номер
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(КоличествоТочекКлиента.КоличествоТочек, 0) > 0
	               |			ТОГДА ПРЕДСТАВЛЕНИЕ(КоличествоТочекКлиента.КоличествоТочек)
	               |		ИНАЧЕ ""1""
	               |	КОНЕЦ,
	               |	ВЫРАЗИТЬ(втПоставки.Количество * втПоставки.Цена КАК ЧИСЛО(15, 2))";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ДатаКон));
	МассивКонтрактов = Новый Массив;
	МассивКонтрактов.Добавить(Справочники.ДистрибьюторскиеКонтракты.НайтиПоКоду("Ц00495")); // "Клевер" 
	Запрос.УстановитьПараметр("СписокКонтрактов", МассивКонтрактов);
	Запрос.УстановитьПараметр("ПустаяТТ", Справочники.СтруктурныеЕдиницыКонтрагентов.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВидАдресСтруктурнойЕдиницы", Справочники.ВидыКонтактнойИнформации.АдресСтруктурнойЕдиницыКонтрагента);
	Запрос.УстановитьПараметр("ВидАдресДоставкиКонтрагента", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	Запрос.УстановитьПараметр("ВидАдресТранссибирская", Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("Ц00003"));
	Запрос.УстановитьПараметр("СтавкаБезНДС", Перечисления.СтавкиНДС.БезНДС);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;
	
КонецФункции	

Функция СформироватьТаблицуСОстатками()
	
	
	СписокМагазинов = Новый СписокЗначений;
	СписокМагазинов.Добавить(Справочники.Склады.НайтиПоКоду("Ц00017"));
	СписокМагазинов.Добавить(Справочники.Склады.НайтиПоКоду("Ц00052"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВЫРАЗИТЬ("""" КАК СТРОКА(10)) КАК DISTRIB_CODE,
	               |	ЕСТЬNULL(МАКСИМУМ(ШК.Штрихкод), """") КАК BARCODE,
	               |	Товары.Артикул КАК WID,
	               |	Товары.Наименование КАК DESCRIPTION,
	               |	ЕСТЬNULL(СУММА(ВложенныйЗапрос.КоличествоНачальныйОстаток), 0) КАК STOCK_BEGIN,
	               |	ЕСТЬNULL(СУММА(ВложенныйЗапрос.КоличествоПриход), 0) КАК STOCK_IN,
	               |	ЕСТЬNULL(СУММА(ВложенныйЗапрос.КоличествоРасход), 0) КАК STOCK_OUT,
	               |	ЕСТЬNULL(СУММА(ВложенныйЗапрос.КоличествоКонечныйОстаток), 0) КАК STOCK_END,
	               |	&ДатаОтчета КАК DATE,
	               |	Товары.Ссылка
	               |ИЗ
	               |	Справочник.Номенклатура КАК Товары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЗапасыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |			ЗапасыНаСкладахОстатки.КоличествоОстаток КАК КоличествоНачальныйОстаток,
	               |			0 КАК КоличествоПриход,
	               |			0 КАК КоличествоРасход,
	               |			0 КАК КоличествоКонечныйОстаток
	               |		ИЗ
	               |			РегистрНакопления.ЗапасыНаСкладах.Остатки(
	               |					&НачДата,
	               |					Номенклатура.ДистрибьюторскийКонтракт = &Контракт
	               |						И НЕ Склад В (&Магазины)) КАК ЗапасыНаСкладахОстатки
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			ЗапасыНаСкладахОбороты.Номенклатура,
	               |			0,
	               |			ЗапасыНаСкладахОбороты.КоличествоПриход,
	               |			0,
	               |			0
	               |		ИЗ
	               |			РегистрНакопления.ЗапасыНаСкладах.Обороты(
	               |					&НачДата,
	               |					&КонДата,
	               |					,
	               |					Номенклатура.ДистрибьюторскийКонтракт = &Контракт
	               |						И НЕ Склад В (&Магазины)) КАК ЗапасыНаСкладахОбороты
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			ЗапасыНаСкладахОбороты.Номенклатура,
	               |			0,
	               |			0,
	               |			ЗапасыНаСкладахОбороты.КоличествоРасход,
	               |			0
	               |		ИЗ
	               |			РегистрНакопления.ЗапасыНаСкладах.Обороты(
	               |					&НачДата,
	               |					&КонДата,
	               |					,
	               |					Номенклатура.ДистрибьюторскийКонтракт = &Контракт
	               |						И НЕ Склад В (&Магазины)) КАК ЗапасыНаСкладахОбороты
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			ЗапасыНаСкладахОстатки.Номенклатура,
	               |			0,
	               |			0,
	               |			0,
	               |			ЗапасыНаСкладахОстатки.КоличествоОстаток
	               |		ИЗ
	               |			РегистрНакопления.ЗапасыНаСкладах.Остатки(
	               |					&КонДата,
	               |					Номенклатура.ДистрибьюторскийКонтракт = &Контракт
	               |						И НЕ Склад В (&Магазины)) КАК ЗапасыНаСкладахОстатки) КАК ВложенныйЗапрос
	               |		ПО Товары.Ссылка = ВложенныйЗапрос.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихКоды КАК ШК
	               |		ПО Товары.Ссылка = ШК.Номенклатура
	               |			И Товары.Ссылка.ЕдиницаХраненияОстатков = ШК.ЕдиницаИзмерения
	               |ГДЕ
	               |	Товары.Ссылка.ДистрибьюторскийКонтракт = &Контракт
	               |	И НЕ Товары.ЭтоГруппа
	               |	И ПОДСТРОКА(Товары.Наименование, 0, 2) <> ""яя""
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Товары.Наименование,
	               |	Товары.Артикул,
	               |	Товары.Ссылка
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("НачДата", ДатаНач);			   
	Запрос.УстановитьПараметр("КонДата", ДатаКон);			   
	Запрос.УстановитьПараметр("Магазины", СписокМагазинов);
	Запрос.УстановитьПараметр("Контракт", Справочники.ДистрибьюторскиеКонтракты.НайтиПоКоду("Ц00495"));			   
	Запрос.УстановитьПараметр("ДатаОтчета", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;
	
КонецФункции	

Функция ПривестиФайлКУРЛ()
	
	Если НЕ ЗначениеЗаполнено(ИмяФайла) тогда
		ИмяФайлаПоУмолчанию = "\td_bic_"+Формат(ТекущаяДата(),"ДФ = dd.MM.yyyy") + ".xls"; 
	Иначе
		ИмяФайлаПоУмолчанию = ИмяФайла + ".xls";
	КонецЕсли;	
	
	ПолныйПуть = КаталогХранения + "\" + ИмяФайлаПоУмолчанию;
	
	ПолныйПуть = СтрЗаменить(ПолныйПуть," ","%20");
	ПолныйПуть = СтрЗаменить(ПолныйПуть,"\","/");
	Возврат "file:/" + "/localhost/" + ПолныйПуть;
	
КонецФункции	

Процедура ИнициализацияLibreCalc()
	
	Попытка
		ServiceManager = New COMОбъект("com.sun.star.ServiceManager");	
	Исключение
		Предупреждение(ОписаниеОшибки() + Символы.ПС + " программа OpenOffice не установлена на данном компьютере");
		Возврат;
	КонецПопытки;	
	
	Desktop = ServiceManager.createInstance("com.sun.star.frame.Desktop");
	Свойства = ServiceManager.Bridge_GetStruct("com.sun.star.beans.PropertyValue");
	Свойства.Name = "AsTemplate";
	Свойства.Value = Истина;
	
	Args = Новый COMSafeArray("VT_VARIANT", 3);
	Args.SetValue(0, Свойства);
	
	Свойства1 = ServiceManager.Bridge_GetStruct("com.sun.star.beans.PropertyValue");
	Свойства1.Name = "Hidden";
	Свойства1.Value = Истина;
	Args.SetValue(1, Свойства1);
	
	Document = Desktop.LoadComponentFromURL("private:factory/scalc", "_blank", 0, Args);
	Sheets = Document.GetSheets();
	Sheets.insertNewByName("CreatedSheet", 1)
	
КонецПроцедуры	

Процедура ВыгрузитьТЗвФайл(ТаблицаРезультата, НомерЛиста, ИмяЛиста)
	
	Sheet = Sheets.getByIndex(НомерЛиста);
	Sheet.Name = ИмяЛиста;
	
	//Если необходимо заполнять шапку, тогда обходим колонки и заполняем соответствующие поля
	Для Сч=0 по ТаблицаРезультата.Колонки.Количество()-1 цикл
		
		СвойстваКолонки = ТаблицаРезультата.Колонки[Сч];
		Sheet.getCellByPosition(Сч, 0).setString(СвойстваКолонки.Имя);
		
	КонецЦикла;
	
	//Выгрузка строк
	ВсегоСтрок   = ТаблицаРезультата.Количество();
	ВсегоКолонок = ТаблицаРезультата.Колонки.Количество();
	
	argsCom = new COMSafeArray("VT_VARIANT", ВсегоСтрок, ВсегоКолонок);	
	Для с=0 по ТаблицаРезультата.Количество()-1 цикл
		Для к=0 по ТаблицаРезультата.Колонки.Количество()-1 цикл
			
			Если ТаблицаРезультата.Колонки[к].Имя = "CHANNEL_CODE" тогда
				ТаблицаРезультата[с][к] = КаналыРынкаБик[ТаблицаРезультата[с][к]];
				Если НЕ ЗначениеЗаполнено(ТаблицаРезультата[с][к]) тогда
					ТаблицаРезультата[с][к] = "CS";	
				КонецЕсли;	
			КонецЕсли;	
			
			Если ТаблицаРезультата.Колонки[к].Имя = "WID" тогда
				Для Каждого ЭлементСписка из СписокСимволов цикл
					
					спецСимвол = ЭлементСписка.Значение;
					
					Если Найти(ТаблицаРезультата[с][к], спецСимвол) > 0 тогда 
						ПозицияСимвола = Найти(ТаблицаРезультата[с][к], спецСимвол);
						ТаблицаРезультата[с][к] = Лев(ТаблицаРезультата[с][к], ПозицияСимвола-1);
						Прервать;
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;	

			Если ТипЗнч(ТаблицаРезультата[с][к]) = Тип("Число") тогда
				argsCom.SetValue(с, к, Формат(ТаблицаРезультата[с][к], "ЧРД=.; ЧГ=0"));	
			ИначеЕсли ТипЗнч(ТаблицаРезультата[с][к]) = Тип("Дата") тогда
				argsCom.SetValue(с, к, Формат(ТаблицаРезультата[с][к], "ДФ=dd.MM.yyyy"));
			Иначе
				argsCom.SetValue(с, к, СокрЛП(ТаблицаРезультата[с][к]));	
			КонецЕсли;
			
			Если ТаблицаРезультата[с][к] = 0 тогда
				argsCom.SetValue(с, к, "0");		
			КонецЕсли;	
			
		КонецЦикла;	
	КонецЦикла;	
	
	Range = Sheet.getCellRangeByPosition(0,1,ВсегоКолонок-1, ВсегоСтрок); // Создаем рабочий диапозон
	Range.setDataArray(argsCom); //Заполняем диапозон данными из массива данных (argsCom)
			
КонецПроцедуры	

Процедура ВыгрузитьОтчетXLS() экспорт
	
	ТаблицаПоставок = СформироватьТаблицуСПродажами();
	
	Если ТаблицаПоставок.Количество() = 0 тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаОстатков = СформироватьТаблицуСОстатками();
	Если ТаблицаОстатков.Количество() = 0 тогда
		Возврат;
	КонецЕсли;

	ТаблицаОстатков.ЗаполнитьЗначения(пКодДистрибьютора, "DISTRIB_CODE");
	ТаблицаПоставок.ЗаполнитьЗначения(пКодДистрибьютора, "DISTRIB_CODE");
	ТаблицаПоставок.ЗаполнитьЗначения(пКодРегиона, "AREA_CODE");
	
	//Немного преобразуем ФИО супервайзера к формату Фамилия И.О
	ФамилияИО = ОбщиеФункции.ФамилияИмяОтчество(пСупервайзер, ТекущаяДата());
	СупервайзерФИО = ОбщиеФункции.ПолучитьФИО(ФамилияИО.Фамилия, ФамилияИО.Имя, ФамилияИО.Отчество);
	ТаблицаПоставок.ЗаполнитьЗначения(СупервайзерФИО, "SUPERVISOR");
	
	ИнициализацияLibreCalc();
	
	Если ServiceManager = Неопределено тогда
		Возврат;
	КонецЕсли;	
	
	//Пакет отчета
	ВыгрузитьТЗвФайл(ТаблицаПоставок, 0, "SELL-OUT");
	ВыгрузитьТЗвФайл(ТаблицаОстатков, 1, "WAREHOUSE");
	//
	
	//Сохраняем файл с отчетом
	Document.storeToURL(ПривестиФайлКУРЛ(), Args); //Сохраняем файл
	
	Свойства2 = ServiceManager.Bridge_getStruct("com.sun.star.beans.PropertyValue");
	Свойства2.Name = "FilterName";
	Свойства2.Value = "MS Excel 97";
	
	Args.SetValue(2, Свойства2);
	
	Document.storeToURL(ПривестиФайлКУРЛ(), Args);
	
	ServiceManager = Неопределено; 
	Document.close(True); 
	Desktop.terminate();
	
КонецПроцедуры	

пСупервайзер = Справочники.ФизическиеЛица.НайтиПоКоду("Ц00013029");
пКодДистрибьютора = "9062906";
пКодРегиона = "155";

КаналыРынкаБик = Новый Соответствие;
КаналыРынкаБик.Вставить("О00005", "HM");
КаналыРынкаБик.Вставить("О00004", "TOB");
КаналыРынкаБик.Вставить("О00006", "OM");
КаналыРынкаБик.Вставить("О00015", "FARM");
КаналыРынкаБик.Вставить("О00002", "CS");
КаналыРынкаБик.Вставить("О00008", "CS");
КаналыРынкаБик.Вставить("", "CS");

СписокСимволов = Новый СписокЗначений;
СписокСимволов.Добавить("-");
СписокСимволов.Добавить("_");
СписокСимволов.Добавить("!");
СписокСимволов.Добавить("№");
СписокСимволов.Добавить(";");
СписокСимволов.Добавить("%");
СписокСимволов.Добавить(":");
СписокСимволов.Добавить("?");
СписокСимволов.Добавить("*");
СписокСимволов.Добавить("(");
СписокСимволов.Добавить(")");
СписокСимволов.Добавить("/");
СписокСимволов.Добавить("\");
СписокСимволов.Добавить("@");
СписокСимволов.Добавить("#");
СписокСимволов.Добавить("$");
СписокСимволов.Добавить("^");
СписокСимволов.Добавить("&");
